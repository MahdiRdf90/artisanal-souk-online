
@tailwind base;
@tailwind components;
@tailwind utilities;

@import url('https://fonts.googleapis.com/css2?family=Cairo:wght@300;400;600;700&family=Inter:wght@300;400;500;600;700&display=swap');

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. */

@layer base {
  :root {
    --background: 45 25% 97%;
    --foreground: 30 15% 15%;

    --card: 42 20% 95%;
    --card-foreground: 30 15% 15%;

    --popover: 45 25% 97%;
    --popover-foreground: 30 15% 15%;

    --primary: 25 75% 60%;
    --primary-foreground: 45 25% 97%;

    --secondary: 35 25% 85%;
    --secondary-foreground: 30 15% 25%;

    --muted: 40 20% 92%;
    --muted-foreground: 30 10% 45%;

    --accent: 25 75% 60%;
    --accent-foreground: 45 25% 97%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 35 20% 88%;
    --input: 35 20% 88%;
    --ring: 25 75% 60%;

    --radius: 1rem;

    /* Craft Connect custom colors */
    --heritage-brown: 30 35% 25%;
    --warm-beige: 42 30% 88%;
    --craft-orange: 25 85% 60%;
    --sand-beige: 45 25% 92%;
    --clay-brown: 25 45% 35%;
    --copper-accent: 20 60% 55%;
  }

  .dark {
    --background: 30 15% 8%;
    --foreground: 45 25% 95%;

    --card: 30 15% 12%;
    --card-foreground: 45 25% 95%;

    --popover: 30 15% 8%;
    --popover-foreground: 45 25% 95%;

    --primary: 25 75% 65%;
    --primary-foreground: 30 15% 8%;

    --secondary: 30 15% 18%;
    --secondary-foreground: 45 25% 95%;

    --muted: 30 15% 15%;
    --muted-foreground: 45 15% 65%;

    --accent: 25 75% 65%;
    --accent-foreground: 30 15% 8%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 30 15% 18%;
    --input: 30 15% 18%;
    --ring: 25 75% 65%;

    /* Dark mode craft colors */
    --heritage-brown: 30 35% 85%;
    --warm-beige: 42 30% 20%;
    --craft-orange: 25 85% 65%;
    --sand-beige: 45 25% 15%;
    --clay-brown: 25 45% 75%;
    --copper-accent: 20 60% 65%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-inter;
  }

  h1, h2, h3, h4, h5, h6 {
    @apply font-cairo;
  }

  .font-arabic {
    @apply font-cairo;
  }

  .text-heritage {
    color: hsl(var(--heritage-brown));
  }

  .text-craft-orange {
    color: hsl(var(--craft-orange));
  }

  .bg-warm-beige {
    background-color: hsl(var(--warm-beige));
  }

  .bg-sand-beige {
    background-color: hsl(var(--sand-beige));
  }

  .bg-clay-brown {
    background-color: hsl(var(--clay-brown));
  }

  .bg-craft-orange {
    background-color: hsl(var(--craft-orange));
  }

  .border-heritage {
    border-color: hsl(var(--heritage-brown));
  }
}

/* Custom animations for modern feel */
@layer utilities {
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-fade-in-up {
    animation: fadeInUp 0.6s ease-out;
  }

  .animate-scale-in {
    animation: scaleIn 0.3s ease-out;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.9);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  .glass-morphism {
    backdrop-filter: blur(10px);
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .craft-gradient {
    background: linear-gradient(135deg, hsl(var(--craft-orange)) 0%, hsl(var(--copper-accent)) 100%);
  }

  .heritage-gradient {
    background: linear-gradient(135deg, hsl(var(--heritage-brown)) 0%, hsl(var(--clay-brown)) 100%);
  }

  /* NEON GLOW EFFECTS */
  .glow-text {
    text-shadow: 0 0 10px currentColor, 0 0 20px currentColor, 0 0 30px currentColor;
  }

  .glow-text-large {
    text-shadow: 0 0 15px currentColor, 0 0 30px currentColor, 0 0 45px currentColor, 0 0 60px currentColor;
  }

  .neon-glow {
    filter: drop-shadow(0 0 20px hsl(var(--craft-orange))) drop-shadow(0 0 40px hsl(var(--craft-orange))) drop-shadow(0 0 60px hsl(var(--craft-orange)));
  }

  .neon-button {
    position: relative;
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .neon-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 0 30px currentColor, 0 10px 30px rgba(0, 0, 0, 0.3);
  }

  .neon-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
  }

  .neon-button:hover::before {
    left: 100%;
  }

  .neon-button-outline {
    position: relative;
    transition: all 0.3s ease;
  }

  .neon-button-outline:hover {
    transform: translateY(-2px);
    box-shadow: 0 0 20px currentColor, 0 5px 20px rgba(0, 0, 0, 0.3);
  }

  .neon-card {
    position: relative;
    transition: all 0.3s ease;
  }

  .neon-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 0 30px currentColor, 0 10px 30px rgba(0, 0, 0, 0.3);
  }

  .neon-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: inherit;
    padding: 1px;
    background: linear-gradient(45deg, currentColor, transparent, currentColor);
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .neon-card:hover::before {
    opacity: 0.3;
  }

  /* Pulsing animation for neon elements */
  @keyframes neonPulse {
    0%, 100% {
      text-shadow: 0 0 5px currentColor, 0 0 10px currentColor, 0 0 15px currentColor;
    }
    50% {
      text-shadow: 0 0 10px currentColor, 0 0 20px currentColor, 0 0 30px currentColor, 0 0 40px currentColor;
    }
  }

  .neon-pulse {
    animation: neonPulse 2s ease-in-out infinite;
  }

  /* Scanning line effect */
  @keyframes scanLine {
    0% {
      transform: translateX(-100%);
    }
    100% {
      transform: translateX(100%);
    }
  }

  .scan-line {
    position: relative;
    overflow: hidden;
  }

  .scan-line::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    animation: scanLine 3s linear infinite;
  }
}
